Tengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/rook/RookMovesSetUp.ktaengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/ClassicChessRuleSet.kt8engine/src/main/kotlin/common/ui/adapters/TestAdapter.kt?engine/src/main/kotlin/common/piece/moveRules/MoveDiagonally.kt?engine/src/main/kotlin/common/piece/moveRules/MoveLimitation.kt,engine/src/main/kotlin/common/board/Board.kt4engine/src/main/kotlin/connection/client/ChessApp.ktHengine/src/main/kotlin/common/game/factory/sharedRules/ItsPlayersTurn.kt9engine/src/main/kotlin/common/game/factory/GameFactory.kt9engine/src/main/kotlin/common/ui/adapters/PieceAdapter.ktIengine/src/main/kotlin/common/board/boardResults/SuccessfulBoardResult.ktJengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveLShape.kt9engine/src/main/kotlin/common/ui/adapters/ColorAdapter.kt>engine/src/main/kotlin/common/game/gameType/ruleSet/RuleSet.ktYengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/ChessPromotionSetUp.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/specialRules/Castling.kt?engine/src/main/kotlin/connection/client/payload/UndoPayload.kt4engine/src/main/kotlin/common/game/actions/Action.ktAengine/src/main/kotlin/connection/server/listener/MoveListener.kt5engine/src/main/kotlin/common/elements/color/Color.ktEengine/src/main/kotlin/connection/client/listener/GameOverListener.ktXengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveVerticalORHorizontal.ktgengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/endConditions/ClassicEndConditions.kt8engine/src/main/kotlin/common/game/results/GameResult.ktWengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/PathNotClearSetUp.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CheckersCapture.ktHengine/src/main/kotlin/connection/client/listener/MyGameEventListener.ktOengine/src/main/kotlin/connection/client/listener/MyClientConnectionListener.kt6engine/src/main/kotlin/connection/client/GameClient.ktTengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/king/CheckMateSetUp.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveVertically.ktHengine/src/main/kotlin/connection/client/listener/InvalidMoveListener.kt=engine/src/main/kotlin/common/game/turnManager/TurnManager.ktBengine/src/main/kotlin/common/game/results/SuccessfulMoveResult.kt7engine/src/main/kotlin/common/game/gameType/GameType.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/PawnCaptureSetUp.kt?engine/src/main/kotlin/common/board/boardResults/BoardResult.kt;engine/src/main/kotlin/common/game/results/EndGameResult.ktNengine/src/main/kotlin/common/game/factory/sharedRules/IsTargetWithinBounds.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/ChessCapture.ktCengine/src/main/kotlin/connection/client/payload/GameOverPayload.ktFengine/src/main/kotlin/connection/client/payload/InvalidMovePayload.ktIengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/KingMoves.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/king/CastlingSetUp.kt7engine/src/main/kotlin/connection/server/ChessServer.kt0engine/src/main/kotlin/common/ui/UIGameEngine.ktKengine/src/main/kotlin/connection/client/listener/SuccessfulMoveListener.ktAengine/src/main/kotlin/connection/server/payload/ClientPayload.kt[engine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/rook/RookPathNotClearSetUp.kt?engine/src/main/kotlin/common/elements/moveTypes/ClassicMove.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CastlingAction.kt8engine/src/main/kotlin/common/ui/adapters/MoveAdapter.ktXengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CheckersPromotion.ktIengine/src/main/kotlin/connection/client/payload/SuccessfulMovePayload.kt,engine/src/main/kotlin/common/piece/Piece.kt?engine/src/main/kotlin/common/piece/specialRules/SpecialRule.ktIengine/src/main/kotlin/connection/client/listener/InitialStateListener.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/CheckValidator.ktOengine/src/main/kotlin/connection/server/listener/MyServerConnectionListener.kt<engine/src/main/kotlin/common/ui/adapters/PositionAdapter.kt0engine/src/main/kotlin/common/piece/PieceType.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/ClearPath.ktcengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/turnManagers/ClassicChessTurnManager.kt?engine/src/main/kotlin/common/game/results/InvalidMoveResult.ktFengine/src/main/kotlin/common/board/boardResults/InvalidBoardResult.kt0engine/src/main/kotlin/common/game/GameEngine.kt6engine/src/main/kotlin/connection/server/GameServer.ktAengine/src/main/kotlin/connection/server/listener/UndoListener.ktPengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveHorizontally.ktAengine/src/main/kotlin/connection/server/listener/RedoListener.kt4engine/src/main/kotlin/common/game/rules/GameRule.ktRengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/PawnMovesComposite.ktKengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveForward.ktFengine/src/main/kotlin/common/game/factory/sharedRules/FriendlyFire.ktJengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/QueenMoves.kt8engine/src/main/kotlin/common/elements/players/Player.kt?engine/src/main/kotlin/connection/client/payload/MovePayload.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/ChessPromotion.kt9engine/src/main/kotlin/common/piece/moveRules/MoveRule.kt;engine/src/main/kotlin/common/piece/factory/PieceFactory.kt;engine/src/main/kotlin/common/elements/position/Position.kt(engine/src/main/kotlin/common/ui/Main.kt[engine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/specialRules/DoublePawnMove.kt?engine/src/main/kotlin/connection/client/payload/RedoPayload.ktIengine/src/main/kotlin/common/game/gameType/endConditions/EndCondition.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/IsEnemyPieceThere.ktWengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/ClassicChessBoardSetUp.kt\engine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveVerticalORHorizontal.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/PawnMovesComposite.ktYengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/specialRules/Castling.ktRengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveVertically.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveLShape.kt<engine/src/main/kotlin/common/piece/moveRules/MoveForward.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/specialRules/DoublePawnMove.ktTengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveHorizontally.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/QueenMoves.kt:engine/src/main/kotlin/checkers/moveRules/CheckersMoves.ktMengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/KingMoves.kt@engine/src/main/kotlin/common/game/sharedRules/ItsPlayersTurn.ktPengine/src/main/kotlin/checkers/game/types/endConditions/CheckersEndCondition.ktAengine/src/main/kotlin/checkers/game/actions/CheckersPromotion.kt>engine/src/main/kotlin/common/game/sharedRules/FriendlyFire.ktAengine/src/main/kotlin/checkers/game/rules/EmptyTargetPosition.kt@engine/src/main/kotlin/checkers/moveRules/CheckersCaptureMove.ktFengine/src/main/kotlin/checkers/game/types/ruleSets/CheckersRuleSet.ktFengine/src/main/kotlin/common/game/sharedRules/IsTargetWithinBounds.kt;engine/src/main/kotlin/checkers/game/rules/ForcedCapture.kt7engine/src/main/kotlin/checkers/game/actions/Capture.kt7engine/src/main/kotlin/checkers/setUps/CheckersSetUp.ktHengine/src/main/kotlin/checkers/game/turnManagers/CheckersTurnManager.kt?engine/src/main/kotlin/checkers/setUps/MultipleCapturesSetUp.ktBengine/src/main/kotlin/checkers/setUps/CaptureAndPromotionSetUp.kt`engine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/variations/ChancellorBoardSetUp.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/ChancellorMoves.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/ChancellorRuleSet.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/FirstCheckRuleSet.ktiengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/endConditions/FirstCheckEndCondition.kt`engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/NoClearPathRuleSet.kt]engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/OnlyJumpRuleSet.kt6engine/src/main/kotlin/checkers/setUps/EndGameSetUp.kt                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
,engine/src/main/kotlin/common/board/Board.kt?engine/src/main/kotlin/common/board/boardResults/BoardResult.ktFengine/src/main/kotlin/common/board/boardResults/InvalidBoardResult.ktIengine/src/main/kotlin/common/board/boardResults/SuccessfulBoardResult.kt5engine/src/main/kotlin/common/elements/color/Color.kt?engine/src/main/kotlin/common/elements/moveTypes/ClassicMove.kt8engine/src/main/kotlin/common/elements/players/Player.kt;engine/src/main/kotlin/common/elements/position/Position.kt0engine/src/main/kotlin/common/game/GameEngine.kt4engine/src/main/kotlin/common/game/actions/Action.kt9engine/src/main/kotlin/common/game/factory/GameFactory.ktFengine/src/main/kotlin/common/game/factory/sharedRules/FriendlyFire.ktNengine/src/main/kotlin/common/game/factory/sharedRules/IsTargetWithinBounds.ktHengine/src/main/kotlin/common/game/factory/sharedRules/ItsPlayersTurn.kt7engine/src/main/kotlin/common/game/gameType/GameType.ktIengine/src/main/kotlin/common/game/gameType/endConditions/EndCondition.kt>engine/src/main/kotlin/common/game/gameType/ruleSet/RuleSet.kt;engine/src/main/kotlin/common/game/results/EndGameResult.kt8engine/src/main/kotlin/common/game/results/GameResult.kt?engine/src/main/kotlin/common/game/results/InvalidMoveResult.ktBengine/src/main/kotlin/common/game/results/SuccessfulMoveResult.kt4engine/src/main/kotlin/common/game/rules/GameRule.kt=engine/src/main/kotlin/common/game/turnManager/TurnManager.kt,engine/src/main/kotlin/common/piece/Piece.kt0engine/src/main/kotlin/common/piece/PieceType.kt;engine/src/main/kotlin/common/piece/factory/PieceFactory.kt?engine/src/main/kotlin/common/piece/moveRules/MoveDiagonally.kt?engine/src/main/kotlin/common/piece/moveRules/MoveLimitation.kt9engine/src/main/kotlin/common/piece/moveRules/MoveRule.kt?engine/src/main/kotlin/common/piece/specialRules/SpecialRule.kt(engine/src/main/kotlin/common/ui/Main.kt0engine/src/main/kotlin/common/ui/UIGameEngine.kt9engine/src/main/kotlin/common/ui/adapters/ColorAdapter.kt8engine/src/main/kotlin/common/ui/adapters/MoveAdapter.kt9engine/src/main/kotlin/common/ui/adapters/PieceAdapter.kt<engine/src/main/kotlin/common/ui/adapters/PositionAdapter.kt8engine/src/main/kotlin/common/ui/adapters/TestAdapter.kt4engine/src/main/kotlin/connection/client/ChessApp.kt6engine/src/main/kotlin/connection/client/GameClient.ktEengine/src/main/kotlin/connection/client/listener/GameOverListener.ktIengine/src/main/kotlin/connection/client/listener/InitialStateListener.ktHengine/src/main/kotlin/connection/client/listener/InvalidMoveListener.ktOengine/src/main/kotlin/connection/client/listener/MyClientConnectionListener.ktHengine/src/main/kotlin/connection/client/listener/MyGameEventListener.ktKengine/src/main/kotlin/connection/client/listener/SuccessfulMoveListener.ktCengine/src/main/kotlin/connection/client/payload/GameOverPayload.ktFengine/src/main/kotlin/connection/client/payload/InvalidMovePayload.kt?engine/src/main/kotlin/connection/client/payload/MovePayload.kt?engine/src/main/kotlin/connection/client/payload/RedoPayload.ktIengine/src/main/kotlin/connection/client/payload/SuccessfulMovePayload.kt?engine/src/main/kotlin/connection/client/payload/UndoPayload.kt7engine/src/main/kotlin/connection/server/ChessServer.kt6engine/src/main/kotlin/connection/server/GameServer.ktAengine/src/main/kotlin/connection/server/listener/MoveListener.ktOengine/src/main/kotlin/connection/server/listener/MyServerConnectionListener.ktAengine/src/main/kotlin/connection/server/listener/RedoListener.ktAengine/src/main/kotlin/connection/server/listener/UndoListener.ktAengine/src/main/kotlin/connection/server/payload/ClientPayload.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CastlingAction.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CheckersCapture.ktXengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/CheckersPromotion.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/ChessCapture.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/actions/ChessPromotion.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/CheckValidator.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/ClearPath.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/rules/IsEnemyPieceThere.ktcengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/turnManagers/ClassicChessTurnManager.ktgengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/endConditions/ClassicEndConditions.ktaengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/ClassicChessRuleSet.ktIengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/KingMoves.ktKengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveForward.ktPengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveHorizontally.ktJengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveLShape.ktXengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveVerticalORHorizontal.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/MoveVertically.ktRengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/PawnMovesComposite.ktJengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/QueenMoves.ktUengine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/specialRules/Castling.kt[engine/src/main/kotlin/edu/austral/dissis/chess/engine/rules/specialRules/DoublePawnMove.ktWengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/ClassicChessBoardSetUp.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/king/CastlingSetUp.ktTengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/king/CheckMateSetUp.ktYengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/ChessPromotionSetUp.ktWengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/PathNotClearSetUp.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/pawn/PawnCaptureSetUp.ktTengine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/rook/RookMovesSetUp.kt[engine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/rook/RookPathNotClearSetUp.kt:engine/src/main/kotlin/checkers/moveRules/CheckersMoves.kt<engine/src/main/kotlin/common/piece/moveRules/MoveForward.ktMengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/KingMoves.ktTengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveHorizontally.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveLShape.kt\engine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveVerticalORHorizontal.ktRengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/MoveVertically.ktVengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/PawnMovesComposite.ktNengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/QueenMoves.ktYengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/specialRules/Castling.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/specialRules/DoublePawnMove.kt7engine/src/main/kotlin/checkers/game/actions/Capture.ktAengine/src/main/kotlin/checkers/game/actions/CheckersPromotion.ktAengine/src/main/kotlin/checkers/game/rules/EmptyTargetPosition.kt;engine/src/main/kotlin/checkers/game/rules/ForcedCapture.ktPengine/src/main/kotlin/checkers/game/types/endConditions/CheckersEndCondition.ktFengine/src/main/kotlin/checkers/game/types/ruleSets/CheckersRuleSet.kt@engine/src/main/kotlin/checkers/moveRules/CheckersCaptureMove.kt>engine/src/main/kotlin/common/game/sharedRules/FriendlyFire.ktFengine/src/main/kotlin/common/game/sharedRules/IsTargetWithinBounds.kt@engine/src/main/kotlin/common/game/sharedRules/ItsPlayersTurn.kt7engine/src/main/kotlin/checkers/setUps/CheckersSetUp.ktHengine/src/main/kotlin/checkers/game/turnManagers/CheckersTurnManager.kt?engine/src/main/kotlin/checkers/setUps/MultipleCapturesSetUp.ktBengine/src/main/kotlin/checkers/setUps/CaptureAndPromotionSetUp.kt`engine/src/main/kotlin/edu/austral/dissis/chess/engine/setUps/variations/ChancellorBoardSetUp.ktSengine/src/main/kotlin/edu/austral/dissis/chess/engine/moveRules/ChancellorMoves.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/ChancellorRuleSet.ktiengine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/endConditions/FirstCheckEndCondition.kt_engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/FirstCheckRuleSet.kt`engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/NoClearPathRuleSet.kt]engine/src/main/kotlin/edu/austral/dissis/chess/engine/game/types/ruleSets/OnlyJumpRuleSet.kt6engine/src/main/kotlin/checkers/setUps/EndGameSetUp.kt                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             